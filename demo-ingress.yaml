---
apiVersion: v1
kind: Namespace
metadata:
  name:  demo-ingress-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-ingress-app
  name: demo-ingress-app
  labels:
    app: demo-ingress-app
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: demo-ingress-app
  template:
    metadata:
      labels:
        app: demo-ingress-app
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: demo-ingress-app
          image: "neotkm/pod-healthcheck:v0.05"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /ws/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /ws/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: PORT
              value: "8080"
            - name: MESSAGE
              value: "Hello, world!"

---
apiVersion: v1
kind: Service
metadata:
  name: demo-ingress-app
  namespace: demo-ingress-app
  labels:
    app: demo-ingress-app
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: demo-ingress-app

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ingress-app
  namespace: demo-ingress-app
  labels:
    app: demo-ingress-app
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: demo-ingress-app
            port:
              number: 8080
  ingressClassName: nginx
